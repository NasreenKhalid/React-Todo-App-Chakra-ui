{"version":3,"sources":["components/AddTodo.js","components/TodoList.js","App.js","index.js"],"names":["AddTodo","addTodo","toast","useToast","useState","value","setValue","onSubmit","e","preventDefault","todo","id","nanoid","text","title","status","duration","isClosable","spacing","mt","variant","type","placeholder","onChange","target","colorScheme","TodoList","todos","deleteTodo","editTodo","modalValue","setModalValue","isOpen","setIsOpen","onClose","handleEditInputChange","console","log","handleEditSubmit","length","map","w","p","h","justifyContent","Delete","color","mr","onClick","Edit","handleEditClick","borderRadius","m","App","setTodos","bgGradient","bgClip","fontSize","fontWeight","newTodos","filter","item","updatedTodo","updatedItem","newTodo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9f2e9f8.chunk.js","sourcesContent":["import { Stack, Input,Button,useToast } from '@chakra-ui/react'\nimport React, {useState} from 'react'\nimport { nanoid } from 'nanoid';\n\n\nfunction AddTodo({ addTodo }) {\nconst toast = useToast()\nconst [value, setValue] = useState(\"\")\n\nfunction handleSubmit(e){\n    e.preventDefault();\n\nif(value === ''){\n    toast({\n        title: \"Please enter the text.\",\n        status: \"warning\",\n        duration: 2000,\n        isClosable: true,\n      })\n      return;\n    }\nconst todo = {\n    id: nanoid(),\n    text: value\n}\n\naddTodo(todo)\nsetValue('')\n\n}\n    return (\n        <form onSubmit={handleSubmit}>\n        <Stack spacing={5}>\n            <Input\n            mt={5} \n            value={value} \n            variant=\"outline\" \n            type=\"text\" \n            placeholder=\"Enter your todo...\"\n            onChange={(e)=>setValue(e.target.value)} />\n            <Button colorScheme=\"teal\" type=\"submit\">Add Todo</Button>\n        </Stack>\n        </form>\n        \n    )\n}\n\nexport default AddTodo\n","import { HStack, VStack,Text, Flex, Badge,Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton, Button, Input, Divider } from '@chakra-ui/react'\nimport { DeleteIcon, EditIcon} from '@chakra-ui/icons'\nimport React,{useState} from 'react'\n\n\nfunction TodoList({ todos, deleteTodo, editTodo }) {\nconst [todo, setTodo] = useState(\"\"); \nconst [modalValue, setModalValue] = useState({})\nconst [isOpen,setIsOpen] = useState(false)   \n\nfunction onClose(){\n    setIsOpen(false)\n  }\n\nfunction handleEditClick(todo){\n    setIsOpen(true)\n// we've set the passed todo to modal value\n    setModalValue(todo)\n    console.log(todo)\n}\n\nfunction handleEditInputChange(e,id){\n \nsetModalValue({ ...modalValue, text: e.target.value });\nconsole.log(modalValue,id) \n}\n\nfunction handleEditSubmit(e){\n  e.preventDefault();\n \n  editTodo(modalValue.id,modalValue)\n  setModalValue(\"\")\n  setIsOpen(false)\n}\n\n    return (\n\n       !todos.length ? \n       <Badge \n       colorScheme=\"purple\" \n       variant=\"outline\"\n       borderRadius=\"4\"\n       p='4' m='5'\n       >No todos for Today!!</Badge> \n       : (\n        <VStack>\n        {todos.map((todo) => (\n            \n            <HStack spacing=\"24px\" w=\"320px\">\n                <Flex p={6} w=\"300px\" h=\"50px\" justifyContent=\"space-between\">\n                <Text>{todo.text}</Text>\n          \n\n                <Flex w=\"10px\" >\n                \n                <DeleteIcon color=\"red.500\" mr=\"2\" onClick={()=>deleteTodo(todo.id)}/>\n                <EditIcon onClick={()=>handleEditClick(todo)} />\n                 \n                </Flex>\n                \n            {/* modal for editing a todo */}\n            <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n            <ModalHeader>Edit Your Todo</ModalHeader>\n            <ModalCloseButton />\n            <form onSubmit={handleEditSubmit}>\n            <ModalBody>\n            <Input   \n            value={modalValue.text} \n            key={modalValue.id}\n            variant=\"outline\" \n            type=\"text\" \n            placeholder=\"Update your todo...\"\n            onChange={handleEditInputChange} />\n            </ModalBody>\n            <ModalFooter>\n            <Button colorScheme=\"teal\" mr={3} onClick={onClose}>\n            Close\n            </Button>\n            <Button type=\"submit\" colorScheme=\"teal\" mr={3}>\n            Update\n            </Button>\n            </ModalFooter>\n          </form>\n          \n          </ModalContent>\n          </Modal>\n         \n\n        </Flex> \n  \n            </HStack>  \n            \n            ))} \n          \n        </VStack>\n        ) \n        ) \n    \n    }   \n\n\nexport default TodoList\n","import {  VStack,Text } from \"@chakra-ui/react\"\nimport './App.css';\nimport {useState} from 'react'\nimport AddTodo from \"./components/AddTodo\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n \nconst todosList = [\n  { id: 1, text: 'Buy eggs'},\n  { id: 2, text: 'Walk the dog'},\n  { id:3, text: 'Watch a movie'}\n];\n\nconst [todos, setTodos] = useState(todosList);\n\n\nfunction deleteTodo(id){\nconst newTodos = todos.filter((item)=> {\n  return item.id !== id \n})\nsetTodos(newTodos)\nconsole.log(newTodos)\n}\n\nfunction addTodo(newTodo){\nsetTodos([...todos,newTodo])\n}\n\nfunction editTodo(id,updatedTodo){\nconst updatedItem = todos.map((todo) => {\n    return todo.id === id ? updatedTodo : todo;\n  });\nsetTodos(updatedItem)\n}\n\n\n\n  return (\n    <VStack p={5}>\n    \n    <Text bgGradient=\"linear(to-l, #7928CA,#FF0080)\"\n      bgClip=\"text\"\n      fontSize=\"6xl\"\n      fontWeight=\"extrabold\">\n      Todo App\n    </Text>\n       \n    <TodoList todos={todos} deleteTodo={deleteTodo} editTodo={editTodo}/>\n    <AddTodo addTodo={addTodo}/>\n\n\n    </VStack>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nReactDOM.render(\n  <React.StrictMode>\n     <ChakraProvider>\n         <App />\n         </ChakraProvider>\n  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}